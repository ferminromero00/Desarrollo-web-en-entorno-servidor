Id tomando nota de cada paso pero tenéis que acabarlo en una hora para poder continuar con los apartados 18 en adelante.

Vamos a prescindir de make:crud

//HECHO
Crea una aplicación de nombre TareasBD3.
Crea las entidades: usuario y tareas relacionándolas entre sí.
--> primero hacemos el user para luego relacionarla automaticamente con tareas

Las tareas tienen una fecha de inicio y otra de fin.
--> simplemente añadirle mas campos con el tipo datetime

Los usuarios tienen nombre, apellidos y fecha de nacimiento.
--> lo creamos con make:user, y luego con make:entity, ponemos el mismo nombre que el usuario y lo actualizamos con nuevos campos

Crea la base de datos  Tareas3.
Migra las entidades.
--> 
php bin/console doctrine:database:create
php bin/console make:migration
php bin/console doctrine:migrations:migrate

Crea un formulario de login y otro de registro.
-->
//CREAR LOGIN
php bin/console make:security:form-login
    >Controler class (default)
    >Logout (deafult)
    >phpunit  (default)
TERMINADO


//CREAR REGISTRO
php bin/console make:registration-form
    >Quieres añadir una validacion para asegurar que no haya duplicados (si defautl)
    >email de verificacion? (no)
    >Quieres autentificar despues de registrarte? (si)
    >Donde quieres redirigir al usuario? (2) //no te sale si tienes ya creado el login
    >php-unit test? (no)
terminado

El formulario de login se enxuentra en la ruta /
--> modificar el security controller --> #[Route(path: '/', name: 'app_login')]

Al formulario de registro se accede a través de un enlace en la página de login.
-->
<button>
	<a href="{{path('app_register')}}" ;>Registrarse</a>
</button>

Después del registro nos redirigimos a la página de login.
--> simplemente con tener el / como path del login de hace automaticamente

Crea un controlador de nombre Tareas (aparte del controlador nos crea una página 
templates/tareas/index.html.twig que será nuestra página de gestión de tareas).
-->php bin/console make:controller Tareas

Redirige el login con éxito a la página de gestión de tareas.
-->
config/packages/security.yml
form_login:
                login_path: app_login
                check_path: app_login
                enable_csrf: true
                default_target_path: app_tareas

cambiamos el default target por el nombre de la app que se encuentra en el controlador

Muestra el nombre del usuario en la página de gestión de tareas.
-->
    <h1>Hola {{ app.user.username }}</h1>

Con esto cogemos automaticamente el nombre de la sesion del usuario, y le saludamos

Muestra un enlace en la página de gestión de tareas para cerrar la sesión.
-->Añadimos esto al index de las tareas
<div>
	<button>
		<a href="{{path('app_logout')}}" ;>Cerrar Sesion</a>
	</button>
</div>

Crea una clase formulario para la entidad Tarea.
-->php bin/console make:form (por hacer)

//NO HECHO


Añade un botón submit al formulario. 
Inserta el formulario en la página de tareas.
Al pulsar "Añadir" debe añadirse la tarea a la base de datos.
Muestra en la página de tareas todas las tareas añadidas.
Añade a cada tarea un enlace para editar y otro para borrar. 
Añade un menú a la aplicación con estas opciones:
Mi cuenta:
Editar
Cerrar
Grupos: permite agrupar usuarios en grupos, de manera que al crear la tarea indiquemos a que grupo va dirigido.